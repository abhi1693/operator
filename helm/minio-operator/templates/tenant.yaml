{{ range .Values.tenants }}
## MinIO Tenant Definition
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: {{ .name }}
  ## Optionally pass labels to be applied to the statefulset pods
  labels:
    app: minio
  ## Annotations for MinIO Tenant Pods
  annotations:
    {{ if .metrics.enabled }}
    prometheus.io/path: /minio/prometheus/metrics
    prometheus.io/port: {{ .metrics.port }}
    prometheus.io/scrape: "true"
    {{ end }}

## If a scheduler is specified here, Tenant pods will be dispatched by specified scheduler.
## If not specified, the Tenant pods will be dispatched by default scheduler.
  {{ if .scheduler.name }}
  scheduler:
    name: {{ .scheduler.name }}
  {{ end }}

spec:
  ## Registry location and Tag to download MinIO Server image
  image: {{ .image.repository }}:{{ .image.tag }}
  imagePullPolicy: {{ .image.pullPolicy }}

  ## Secret with credentials to be used by MinIO Tenant.
  ## Refers to the secret object created above.
  credsSecret:
    name: minio-creds-secret

  ## Specification for MinIO Pool(s) in this Tenant.
  pools:
      ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
      ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
      ## Note that the operator does not support upgrading from standalone to distributed mode.
    - servers: {{ .pools.servers }}

      ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
      volumesPerServer: {{ .pools.volumesPerServer }}

      ## This VolumeClaimTemplate is used across all the volumes provisioned for MinIO Tenant in this
      ## Pool.
      {{ if .persistence.enabled }}
      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ .persistence.size }}
      {{ end }}

      ## Used to specify a toleration for a pod
      {{- with .tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{ end }}

      ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
      ## eligible to run on a node, the node must have each of the
      ## indicated key-value pairs as labels.
      ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
      {{- with .nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{ end }}

      ## Affinity settings for MinIO pods. Read more about affinity
      ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
      {{- with .affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{ end }}

      ## Configure resource requests and limits for MinIO containers
      {{- with .resources }}
      resources:
        {{ toYaml . | nindent 8 }}
      {{ end }}

      ## Configure security context
      {{- with .securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 }}
      {{ end }}

  ## Mount path where PV will be mounted inside container(s).
  mountPath: {{ .persistence.mountPath }}
  ## Sub path inside Mount path where MinIO stores data.
  subPath: {{ .persistence.subPath }}

  ## Use this field to provide a list of Secrets with external certificates. This can be used to to configure
  ## TLS for MinIO Tenant pods. Create secrets as explained here:
  ## https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
  {{- with .certificate.externalCertSecret }}
  externalCertSecret:
    {{ toYaml . | nindent 6 }}
  {{ end }}

  ## Enable automatic Kubernetes based certificate generation and signing as explained in
  ## https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster
  requestAutoCert: {{ .certificate.requestAutoCert }}

  ## Enable S3 specific features such as Bucket DNS which would allow `buckets` to be
  ## accessible as DNS entries of form `<bucketname>.minio.default.svc.cluster.local`
  s3:
    ## This feature is turned off by default
    bucketDNS: {{ .certificate.s3.bucketDNS }}

  ## This field is used only when "requestAutoCert" is set to true. Use this field to set CommonName
  ## for the auto-generated certificate. Internal DNS name for the pod will be used if CommonName is
  ## not provided. DNS name format is *.minio.default.svc.cluster.local
  {{- with .certificate.certConfig }}
  certConfig:
    {{ toYaml . | nindent 4 }}
  {{- end }}

  ## PodManagement policy for MinIO Tenant Pods. Can be "OrderedReady" or "Parallel"
  ## Refer https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ## for details.
  podManagementPolicy: {{ .podManagementPolicy }}

  ## serviceMetadata allows passing additional labels and annotations to MinIO and Console specific
  ## services created by the operator.
  {{- with .serviceMetadata }}
  serviceMetadata:
    {{ toYaml . | nindent 4 }}
  {{- end }}

  ## Add environment variables to be set in MinIO container (https://github.com/minio/minio/tree/master/docs/config)
  {{- with .env }}
    {{ toYaml . | nindent 4 }}
  {{- end }}

  ## PriorityClassName indicates the Pod priority and hence importance of a Pod relative to other Pods.
  ## This is applied to MinIO pods only.
  ## Refer Kubernetes documentation for details https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass/
  priorityClassName: {{ .priorityClassName }}

  ## Define configuration for Console (Graphical user interface for MinIO)
  ## Refer https://github.com/minio/console
  console:
    image: {{ .console.image.repository }}:{{ .console.image.tag }}
    replicas: {{ .console.replicaCount }}
    consoleSecret:
      name: console-secret
    {{- with .securityContext }}
    securityContext:
      {{ toYaml . | nindent 6 }}
    {{ end }}
{{ end }}